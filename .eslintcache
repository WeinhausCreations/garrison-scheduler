[{"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\index.js":"1","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\reportWebVitals.js":"2","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\App.js":"3","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\ProvideAuth.js":"4","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Registered.js":"5","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Navigation.js":"6","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Verify.js":"7","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Login.js":"8","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\ProvideAPI.js":"9","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Home.js":"10","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Register.js":"11","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\authContext.js":"12","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\useProvideAuth.js":"13","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\useAuth.js":"14","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\apiContext.js":"15","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\useProvideAPI.js":"16","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\useAPI.js":"17","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\register\\RegPage2.js":"18","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\register\\RegPage1.js":"19","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\register\\RegPage3.js":"20","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\config\\theme.js":"21","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\UserRoute.js":"22","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\AdminRoute.js":"23","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\Dashboard.js":"24","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\Selector.js":"25","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\FrontDesk.js":"26","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\Administration.js":"27","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\DashRoute.js":"28","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\Display.js":"29","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\CheckedIn.js":"30","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\Upcoming.js":"31","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\Occupancy.js":"32","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\functions.js":"33","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\OptionButtons.js":"34","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\AddNewUserDialog.js":"35","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\functions\\polling.js":"36"},{"size":504,"mtime":1609101210268,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":2715,"mtime":1609543623878,"results":"40","hashOfConfig":"38"},{"size":286,"mtime":1609285883108,"results":"41","hashOfConfig":"38"},{"size":679,"mtime":1609230294141,"results":"42","hashOfConfig":"38"},{"size":8281,"mtime":1611358880005,"results":"43","hashOfConfig":"38"},{"size":2174,"mtime":1609472208156,"results":"44","hashOfConfig":"38"},{"size":4032,"mtime":1611031198930,"results":"45","hashOfConfig":"38"},{"size":275,"mtime":1609387977562,"results":"46","hashOfConfig":"38"},{"size":739,"mtime":1610994486894,"results":"47","hashOfConfig":"38"},{"size":4410,"mtime":1611031198937,"results":"48","hashOfConfig":"38"},{"size":108,"mtime":1609284138467,"results":"49","hashOfConfig":"38"},{"size":2586,"mtime":1609565287569,"results":"50","hashOfConfig":"38"},{"size":172,"mtime":1609284190177,"results":"51","hashOfConfig":"38"},{"size":106,"mtime":1609387977566,"results":"52","hashOfConfig":"38"},{"size":660,"mtime":1611279255422,"results":"53","hashOfConfig":"38"},{"size":169,"mtime":1609387977570,"results":"54","hashOfConfig":"38"},{"size":6369,"mtime":1611287800929,"results":"55","hashOfConfig":"38"},{"size":9808,"mtime":1611287778059,"results":"56","hashOfConfig":"38"},{"size":7555,"mtime":1611031198957,"results":"57","hashOfConfig":"38"},{"size":2128,"mtime":1611358802891,"results":"58","hashOfConfig":"38"},{"size":562,"mtime":1609616986022,"results":"59","hashOfConfig":"38"},{"size":657,"mtime":1609622396539,"results":"60","hashOfConfig":"38"},{"size":2554,"mtime":1610944700508,"results":"61","hashOfConfig":"38"},{"size":4041,"mtime":1610847726596,"results":"62","hashOfConfig":"38"},{"size":3902,"mtime":1611289438246,"results":"63","hashOfConfig":"38"},{"size":419,"mtime":1610819992797,"results":"64","hashOfConfig":"38"},{"size":475,"mtime":1609622419415,"results":"65","hashOfConfig":"38"},{"size":3498,"mtime":1611357920564,"results":"66","hashOfConfig":"38"},{"size":7564,"mtime":1611294453152,"results":"67","hashOfConfig":"38"},{"size":6833,"mtime":1611289194479,"results":"68","hashOfConfig":"38"},{"size":2058,"mtime":1610995329077,"results":"69","hashOfConfig":"38"},{"size":353,"mtime":1610233183317,"results":"70","hashOfConfig":"38"},{"size":2599,"mtime":1611289564423,"results":"71","hashOfConfig":"38"},{"size":18368,"mtime":1611295689673,"results":"72","hashOfConfig":"38"},{"size":166,"mtime":1611357908595,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"5rn2wi",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\index.js",[],["157","158"],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\reportWebVitals.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\App.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\ProvideAuth.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Registered.js",["159"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Registered = () => {\r\n    return (\r\n        <div>\r\n            <h2>Thank you for registering!</h2>\r\n            <p>\r\n                An email has been sent to the email provided. Please verify your\r\n                email to utilize your account. The link provided expires in 24\r\n                hours. If you need a new code, please{\" \"}\r\n                <Link to=\"/resend\">click here </Link> to create a new link.\r\n            </p>\r\n            <Link to=\"/\">Return to Main Page</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registered;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Navigation.js",["160"],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Verify.js",["161"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAPI from './../../api/useAPI';\r\n\r\nconst Verify = (props) => {\r\n    const api = useAPI();\r\n    const [state, setState] = useState({\r\n        response: \"\",\r\n        message: \"\",\r\n    });\r\n\r\n    const resendCode = () => {\r\n        return;\r\n    };\r\n\r\n    useEffect(() => {\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let code = params.get(\"code\");\r\n        fetch(`${api.host}${api.path}/verify?code=${code}`)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setState({ response: res.response, message: res.message });\r\n            });\r\n    }, [api]);\r\n\r\n    let message;\r\n    switch (state.response) {\r\n        case \"Verified\":\r\n            message = (\r\n                <div>\r\n                    <p>\r\n                        Your email has been verified. Please continue to the\r\n                        login page to use Garrison Scheduler.\r\n                    </p>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            );\r\n            break;\r\n        case \"Expired\":\r\n            message = (\r\n                <div>\r\n                    <p>\r\n                        Your verification code has expired. Please click below\r\n                        to resend your verification email.\r\n                    </p>\r\n                    <button onClick={resendCode}>Resend Email</button>\r\n                </div>\r\n            );\r\n            break;\r\n        case \"Bad Code\":\r\n            message = (\r\n                <div>\r\n                    <p>\r\n                        Your verification code did not match any records. This\r\n                        could be because you have already verified your account.\r\n                        Please contact support for more assistance if necessary.\r\n                    </p>\r\n                </div>\r\n            );\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return <div>{message}</div>;\r\n};\r\n\r\nexport default Verify;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Login.js",["162"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useAuth from \"./../../auth/useAuth\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    TextField,\r\n    Button,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Grid,\r\n    Container,\r\n    Typography,\r\n    Link,\r\n} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let auth = useAuth();\r\n    let classes = useStyles();\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const useMountEffect = (func) => useEffect(func, []);\r\n\r\n    let login = () => {\r\n        auth.signin(() => {\r\n            history.replace(from);\r\n        });\r\n    };\r\n    let forgotPassword = () => {\r\n        history.push(\"/forgot\");\r\n    };\r\n    useMountEffect(() => {\r\n        let validate = () => {\r\n            auth.validate(() => {\r\n                history.replace(from);\r\n            });\r\n        };\r\n        validate();\r\n    });\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h2\">\r\n                    Sign in\r\n                </Typography>\r\n                <TextField\r\n                    required\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    autoFocus\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    label=\"Username\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"username\"\r\n                    value={auth.username}\r\n                    onChange={(e) => auth.setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                    required\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    autoComplete=\"current-password\"\r\n                    value={auth.password}\r\n                    onChange={(e) => auth.setPassword(e.target.value)}\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={auth.remember}\r\n                            onChange={(e) => auth.setRemember(e.target.checked)}\r\n                            name=\"remember\"\r\n                            id=\"remember\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                    label=\"Remeber Login\"\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={login}\r\n                    className={classes.submit}\r\n                    fullWidth\r\n                >\r\n                    Login\r\n                </Button>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                        <Link href=\"#\" variant=\"body2\">\r\n                            Forgot password?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link href=\"/register\" variant=\"body2\">\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default Login;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\ProvideAPI.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Home.js",["163","164","165"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useAuth from \"./../../auth/useAuth\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Home = () => {\r\n    let auth = useAuth();\r\n    // const classes = useStyles();\r\n    let userMsg = auth.user ? \"Hello User\" : \"Not logged in\";\r\n    let adminMsg = auth.admin ? \"Hello Admin\" : \"Not logged in\";\r\n    console.log(auth);\r\n    return (\r\n        <Container>\r\n            <h2 className=\"intro-text\">Welcome!</h2>\r\n            <p>{userMsg}</p>\r\n            <p>{adminMsg}</p>\r\n        </Container>\r\n    );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n// \r\n// }));\r\n\r\nexport default Home;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\Register.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\authContext.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\useProvideAuth.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\useAuth.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\apiContext.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\useProvideAPI.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\api\\useAPI.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\register\\RegPage2.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\register\\RegPage1.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\public\\register\\RegPage3.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\config\\theme.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\UserRoute.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\auth\\AdminRoute.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\Dashboard.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\Selector.js",["166"],"import {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Typography,\r\n    Container,\r\n} from \"@material-ui/core\";\r\nimport useAPI from \"./../../../../api/useAPI\";\r\nimport useAuth from \"./../../../../auth/useAuth\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst Selector = (props) => {\r\n    let classes = useStyles();\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    const api = useAPI();\r\n    const [serviceList, setServiceList] = useState([]);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.host}${api.path}/dashboard/services`)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setServiceList(res);\r\n                let list = res.map((item) => item.id);\r\n                auth.setServicesAdmin(list);\r\n            });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const route = (id, name, destination, destinationName) => {\r\n        sessionStorage.setItem(\"serviceId\", id);\r\n        sessionStorage.setItem(\"serviceName\", name);\r\n        sessionStorage.setItem(\"destination\", destinationName);\r\n        history.push(`${props.path}/${id}/${destination}`);\r\n    };\r\n\r\n    const serviceItems = serviceList.map((item) => (\r\n        <Accordion\r\n            expanded={expanded === `panel${item.id}`}\r\n            onChange={handleChange(`panel${item.id}`)}\r\n            key={`accordion-${item.id}`}\r\n        >\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={`panel${item.id}bh-content`}\r\n                id={`panel${item.id}bh-header`}\r\n            >\r\n                <Typography className={classes.heading}>{item.name}</Typography>\r\n                <Typography className={classes.secondaryHeading}>\r\n                    {item.location}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails id={`panel${item.id}bh-details`}>\r\n                <List className={classes.accordionList}>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.listItem}\r\n                        key={`${item.id}-fd`}\r\n                        onClick={() => route(item.id, item.name, \"frontdesk\", \"Front Desk\")}\r\n                    >\r\n                        <ListItemText primary={`Front Desk`} />\r\n                    </ListItem>\r\n                    <ListItem\r\n                        button\r\n                        className={classes.listItem}\r\n                        key={`${item.id}-admin`}\r\n                        onClick={() =>\r\n                            route(item.id, item.name, \"administration\", \"Administration\")\r\n                        }\r\n                    >\r\n                        <ListItemText primary={`Service Administration`} />\r\n                    </ListItem>\r\n                </List>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    ));\r\n\r\n    return (\r\n        <Container className={classes.selectContainer}>\r\n            {serviceItems}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: \"33.33%\",\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    accordionList: {\r\n        display: \"flex\",\r\n        flexFlow: \"rows wrap\",\r\n    },\r\n    listItem: {\r\n        width: 200,\r\n    },\r\n    selectContainer: {\r\n        maxWidth: 800,\r\n    },\r\n}));\r\n\r\nexport default Selector;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\FrontDesk.js",["167","168","169","170"],"import { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useAPI from \"./../../../../api/useAPI\";\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    Typography,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Display from \"./frontdesk/Display\";\r\nimport OptionButtons from \"./frontdesk/OptionButtons\";\r\n\r\nconst FrontDesk = (props) => {\r\n    let serviceId = sessionStorage.getItem(\"serviceId\");\r\n    let serviceName = sessionStorage.getItem(\"serviceName\");\r\n    let api = useAPI();\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [sectionList, setSectionList] = useState([]);\r\n    const [section, setSection] = useState(\"0\");\r\n\r\n    const handleChange = (e) => {\r\n        let id = e.target.value;\r\n        let index = e.target.selectedIndex;\r\n        let name = e.target[index].label;\r\n        sessionStorage.setItem(\"sectionId\", id);\r\n        sessionStorage.setItem(\"sectionName\", name);\r\n        setSection(id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem(\"sectionId\") > 0) {\r\n            setSection(sessionStorage.getItem(\"sectionId\").toString());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.host}${api.path}/dashboard/service/${serviceId}/frontdesk`)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                if (res.status === 404) {\r\n                    history.replace(props.path);\r\n                }\r\n                setSectionList(res);\r\n                // setSection(res[0].id);\r\n                // sessionStorage.setItem(\"sectionId\", res[0].id);\r\n                // sessionStorage.setItem(\"sectionName\", res[0].name);\r\n            });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [api, serviceId]);\r\n\r\n    const sections = sectionList.map((section) => (\r\n        <option key={`section${section.id}`} value={section.id}>\r\n            {section.name}\r\n        </option>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                    >\r\n                        <InputLabel htmlFor=\"select-section\" shrink={section !== \"0\" ? true : false}>\r\n                            Select Section\r\n                        </InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={section}\r\n                            onChange={(e) => handleChange(e)}\r\n                            label=\"Select Section\"\r\n                            inputProps={{\r\n                                name: \"section\",\r\n                                id: \"select-section\",\r\n                            }}\r\n                        >\r\n                            <option aria-label=\"None\" value=\"\" />\r\n                            {sections}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    {sessionStorage.getItem(\"sectionId\") ? (\r\n                        <OptionButtons\r\n                            sectionDetails={sectionList.filter(item => item.id === parseInt(section))}\r\n                        />\r\n                    ) : null}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {sessionStorage.getItem(\"sectionId\") ? <Display /> : null}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: \"85%\",\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default FrontDesk;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\Administration.js",["171","172"],"import { useParams, Link } from \"react-router-dom\";\r\n\r\nconst Administration = (props) => {\r\n    let serviceId = sessionStorage.getItem(\"serviceId\")\r\n    let serviceName = sessionStorage.getItem(\"serviceName\")\r\n    return (\r\n        <div>\r\n            <h2>Administration - {serviceName}</h2>\r\n            <Link to={`${props.path}`}>Back to Dashboard</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Administration;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\DashRoute.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\Display.js",["173","174","175"],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\CheckedIn.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\Upcoming.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\Occupancy.js",["176"],"import { Container, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport useAPI from \"./../../../../../api/useAPI\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Occupancy = (props) => {\r\n    let classes = useStyles();\r\n    const sectionId = sessionStorage.getItem(\"sectionId\");\r\n    const api = useAPI();\r\n    const current = props.checkedIn.length;\r\n    const [chartData, setChartData] = useState({ timeSlot: [], occupancy: [] });\r\n    useEffect(() => {\r\n        fetch(\r\n            `${api.host}${api.path}/dashboard/section/${sectionId}/occupancy/future`\r\n        )\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setChartData(res);\r\n                console.log(chartData);\r\n            });\r\n    }, []);\r\n\r\n    const data = {\r\n        labels: chartData.timeSlot,\r\n        datasets: [\r\n            {\r\n                label: \"Reservations\",\r\n                data: chartData.occupancy,\r\n                fill: true,\r\n                backgroundColor: \"rgb(152, 189, 211, 0.5)\",\r\n                borderColor: \"rgba(0, 90, 143, 1)\",\r\n            },\r\n        ],\r\n    };\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        max: 50,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        maintainAspectRatio: false,\r\n    };\r\n\r\n    return (\r\n        <Container className={classes.occupancyContainer}>\r\n            <Typography variant=\"h3\">Current Occupancy: {current}</Typography>\r\n            <div className={classes.lineChart}>\r\n                <Line data={data} options={options} height={400} />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    occupancyContainer: {\r\n        height: 420,\r\n        padding: 0,\r\n    },\r\n    lineChart: {\r\n        maxHeight: 350,\r\n    },\r\n}));\r\n\r\nexport default Occupancy;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\functions.js",[],"D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\OptionButtons.js",["177","178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Grid,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport useAPI from \"./../../../../../api/useAPI\";\r\nimport AddNewUserDialog from \"./AddNewUserDialog\";\r\n\r\nconst OptionButtons = (props) => {\r\n    const api = useAPI();\r\n    const classes = useStyles();\r\n    const [dialogBox, setDialogBox] = useState({\r\n        newUser: false,\r\n        userLookup: false,\r\n    });\r\n    const [associationList, setAssociationList] = useState([]);\r\n    const [newUser, setNewUser] = useState({\r\n        dodin: null,\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        associationId: 0,\r\n        email: \"\",\r\n        phone: null,\r\n        unit: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.host}${api.path}/association/`)\r\n            .then((res) => res.json())\r\n            .then((res) => setAssociationList(res));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleOpenNewUser = () => {\r\n        setDialogBox({ ...dialogBox, newUser: true });\r\n    };\r\n\r\n    const handleOpenLookupUser = () => {\r\n        setDialogBox({ ...dialogBox, userLookup: true });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDialogBox({ newUser: false, userLookup: false });\r\n    };\r\n\r\n    const checkInUser = (userId, start, lastName) => {};\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={handleOpenNewUser}\r\n                    >\r\n                        Add New User\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                        onClick={handleOpenLookupUser}\r\n                    >\r\n                        Lookup User\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <AddNewUserDialog\r\n                handleClose={handleClose}\r\n                open={dialogBox.newUser}\r\n                sectionDetails={props.sectionDetails}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        minWidth: 150,\r\n    },\r\n}));\r\n\r\nexport default OptionButtons;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\screens\\private\\admin\\dashboard\\frontdesk\\AddNewUserDialog.js",["187"],"/* eslint-disable no-useless-escape */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Grid,\r\n    TextField,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport InputMask from \"react-input-mask\";\r\nimport useAPI from \"../../../../../api/useAPI\";\r\nimport useAuth from \"./../../../../../auth/useAuth\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst AddNewUserDialog = (props) => {\r\n    const api = useAPI();\r\n    const auth = useAuth();\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [dodin, setDodin] = useState(null);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(null);\r\n    const [firstNameError, setFirstNameError] = useState(false);\r\n    const [lastNameError, setLastNameError] = useState(false);\r\n    const [dodinError, setDodinError] = useState(false);\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [phoneError, setPhoneError] = useState(false);\r\n    const [firstNameErrorText, setFirstNameErrorText] = useState(\"\");\r\n    const [lastNameErrorText, setLastNameErrorText] = useState(\"\");\r\n    const [dodinErrorText, setDodinErrorText] = useState(\"\");\r\n    const [emailErrorText, setEmailErrorText] = useState(\"\");\r\n    const [phoneErrorText, setPhoneErrorText] = useState(\"\");\r\n    const [association, setAssociation] = useState(props.association);\r\n    const [unit, setUnit] = useState(props.unit);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [associationError, setAssociationError] = useState(false);\r\n    const [unitError, setUnitError] = useState(false);\r\n    const [associationErrorText, setAssociationErrorText] = useState(\"\");\r\n    const [unitErrorText, setUnitErrorText] = useState(\"\");\r\n    const [associationList, setAssociationList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.host}${api.path}/association/`)\r\n            .then((res) => res.json())\r\n            .then((res) => setAssociationList(res));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const register = async (cb) => {\r\n        if (\r\n            !firstNameError &&\r\n            !lastNameError &&\r\n            !dodinError &&\r\n            !emailError &&\r\n            !phoneError &&\r\n            !associationError &&\r\n            !unitError &&\r\n            firstName &&\r\n            lastName &&\r\n            dodin &&\r\n            email &&\r\n            phone &&\r\n            association\r\n        ) {\r\n            const body = {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                dodin: dodin,\r\n                email: email,\r\n                phone: parseInt(phone.replaceAll(/[\\+\\(\\)-\\s]/g, \"\")),\r\n                associationId: association,\r\n                unit: unit,\r\n                updatedUserId: auth.user,\r\n            };\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body),\r\n            };\r\n            fetch(`${api.host}${api.path}/users/`, options)\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    cb(res);\r\n                })\r\n                .catch((res) => alert(res.message));\r\n        } else {\r\n            alert(\"Please ensure all fields are filled in properly.\");\r\n        }\r\n    };\r\n\r\n    const checkIn = async (newId) => {\r\n        const body = {\r\n            userId: newId,\r\n            sectionId: sessionStorage.getItem(\"sectionId\"),\r\n        };\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n        };\r\n        fetch(`${api.host}${api.path}/dashboard/user/checkin`, options)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                const socket = socketIOClient(api.host);\r\n                socket.emit(\"reservation created\", res, (response) => {\r\n                    if (response.status === \"success\"){\r\n                        alert(\"User Created and Checked In.\");\r\n                    } else {\r\n                        alert(\"something went wrong\");\r\n                    }\r\n                });\r\n                socket.disconnect();\r\n                props.handleClose();\r\n            })\r\n            .catch((res) => alert(res.message));\r\n    };\r\n\r\n    const registerNewUser = async () => {\r\n        register((newId) => {\r\n            if (newId > 0) {\r\n                alert(\"User Created\");\r\n                props.handleClose();\r\n            }\r\n        });\r\n    };\r\n\r\n    const checkInNewUser = async () => {\r\n        register((newId) => {\r\n            if (newId > 0) {\r\n                checkIn(newId);\r\n            }\r\n        });\r\n    };\r\n\r\n    const validate = async (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === \"firstName\") {\r\n            if (!value) {\r\n                setFirstNameError(true);\r\n                setFirstNameErrorText(\"You must enter a first name\");\r\n            } else {\r\n                setFirstNameError(false);\r\n                setFirstNameErrorText(\"\");\r\n            }\r\n            if (!/^[A-Za-z\\s\\-]+$/.test(value)) {\r\n                setFirstNameError(true);\r\n                setFirstNameErrorText(\r\n                    \"Name can only contain letters, spaces, or dashes.\"\r\n                );\r\n            } else {\r\n                setFirstNameError(false);\r\n                setFirstNameErrorText(\"\");\r\n            }\r\n        }\r\n        if (name === \"lastName\") {\r\n            if (!value) {\r\n                setLastNameError(true);\r\n                setLastNameErrorText(\"You must enter a first name\");\r\n            } else {\r\n                setLastNameError(false);\r\n                setLastNameErrorText(\"\");\r\n            }\r\n            if (!/^[A-Za-z\\s\\-]+$/.test(value)) {\r\n                setLastNameError(true);\r\n                setLastNameErrorText(\r\n                    \"Name can only contain letters, spaces, or dashes.\"\r\n                );\r\n            } else {\r\n                setLastNameError(false);\r\n                setLastNameErrorText(\"\");\r\n            }\r\n        }\r\n        if (name === \"dodin\") {\r\n            if (value.length !== 10) {\r\n                setDodinError(true);\r\n                setDodinErrorText(\"DoD ID Numbers must contain 10 digits.\");\r\n            } else {\r\n                await fetch(`${api.host}${api.path}/users/check?dodin=${value}`)\r\n                    .then((res) => res.json())\r\n                    .then((res) => {\r\n                        if (res > 0) {\r\n                            setDodinError(true);\r\n                            setDodinErrorText(\r\n                                \"DoD ID already found in the system.\"\r\n                            );\r\n                        } else {\r\n                            setDodinError(false);\r\n                            setDodinErrorText(\"\");\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        if (name === \"email\") {\r\n            if (value.indexOf(\"@\") < 0) {\r\n                setEmailError(true);\r\n                setEmailErrorText(\"Please enter a valid email.\");\r\n            } else {\r\n                await fetch(`${api.host}${api.path}/users/check?email=${value}`)\r\n                    .then((res) => res.json())\r\n                    .then((res) => {\r\n                        if (res > 0) {\r\n                            setEmailError(true);\r\n                            setEmailErrorText(\r\n                                \"Email already found in the system.\"\r\n                            );\r\n                        } else {\r\n                            setEmailError(false);\r\n                            setEmailErrorText(\"\");\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n        if (name === \"phone\") {\r\n            const phoneNum = parseInt(value.replaceAll(/[\\+\\(\\)-\\s]/g, \"\"));\r\n            if (phoneNum.toString().length < 10) {\r\n                setPhoneError(true);\r\n                setPhoneErrorText(\r\n                    \"Please enter a valid, 10-digit phone number.\"\r\n                );\r\n            } else {\r\n                setPhoneError(false);\r\n                setPhoneErrorText(\"\");\r\n            }\r\n        }\r\n        if (name === \"association\") {\r\n            if (!value || value === 0) {\r\n                setAssociationError(true);\r\n                setAssociationErrorText(\r\n                    \"You must select your military association.\"\r\n                );\r\n                setDisabled(true);\r\n                setUnit(\"\");\r\n            } else {\r\n                setAssociationError(false);\r\n                setAssociationErrorText(\"\");\r\n                if (value >= 1 && value <= 4) {\r\n                    setDisabled(false);\r\n                }\r\n            }\r\n        }\r\n        if (name === \"unit\" && !disabled) {\r\n            if (!value) {\r\n                setUnitError(true);\r\n                setUnitErrorText(\"You must enter a unit.\");\r\n            } else {\r\n                setUnitError(false);\r\n                setUnitErrorText(\"\");\r\n            }\r\n            if (!/^[A-Za-z0-9\\s\\-]+$/.test(value)) {\r\n                setUnitError(true);\r\n                setUnitErrorText(\r\n                    \"Unit can only contain letters, numbers, spaces, or dashes.\"\r\n                );\r\n            } else {\r\n                setUnitError(false);\r\n                setUnitErrorText(\"\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const associationOptions = associationList.map((item) => (\r\n        <option key={`association_${item.id}`} value={item.id}>\r\n            {item.name}\r\n        </option>\r\n    ));\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Add New User</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            required\r\n                            id=\"dodin\"\r\n                            name=\"dodin\"\r\n                            type=\"number\"\r\n                            label=\"DoD ID Number\"\r\n                            variant=\"outlined\"\r\n                            onInput={(e) => {\r\n                                e.target.value = Math.max(\r\n                                    0,\r\n                                    parseInt(e.target.value)\r\n                                )\r\n                                    .toString()\r\n                                    .slice(0, 10);\r\n                            }}\r\n                            value={dodin}\r\n                            onChange={(e) => {\r\n                                setDodin(e.target.value);\r\n                                validate(e);\r\n                            }}\r\n                            onBlur={validate}\r\n                            error={dodinError}\r\n                            helperText={dodinErrorText}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            maxLength={50}\r\n                            value={firstName}\r\n                            onChange={(e) => {\r\n                                setFirstName(e.target.value);\r\n                                validate(e);\r\n                            }}\r\n                            onBlur={validate}\r\n                            error={firstNameError}\r\n                            helperText={firstNameErrorText}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            maxLength={50}\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                            onBlur={validate}\r\n                            error={lastNameError}\r\n                            helperText={lastNameErrorText}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            required\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            maxLength={50}\r\n                            value={email}\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                                validate(e);\r\n                            }}\r\n                            onBlur={validate}\r\n                            error={emailError}\r\n                            helperText={emailErrorText}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <InputMask\r\n                            className={classes.input}\r\n                            mask=\"(999) 999-9999\"\r\n                            // value={props.phone}\r\n                            maskChar=\" \"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            required\r\n                            label=\"Phone Number\"\r\n                            variant=\"outlined\"\r\n                            value={phone}\r\n                            onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                                validate(e);\r\n                            }}\r\n                            onBlur={validate}\r\n                            error={phoneError}\r\n                            helperText={phoneErrorText}\r\n                        >\r\n                            {(inputProps) => <TextField {...inputProps} />}\r\n                        </InputMask>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.input}\r\n                        >\r\n                            <InputLabel htmlFor=\"association\">\r\n                                Association\r\n                            </InputLabel>\r\n                            <Select\r\n                                native\r\n                                required\r\n                                label=\"Association\"\r\n                                variant=\"outlined\"\r\n                                value={association}\r\n                                inputProps={{\r\n                                    name: \"association\",\r\n                                    id: \"association\",\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    setAssociation(e.target.value);\r\n                                    validate(e);\r\n                                }}\r\n                                onBlur={validate}\r\n                                error={associationError}\r\n                            >\r\n                                <option value=\"0\">Select</option>\r\n                                {associationOptions}\r\n                            </Select>\r\n                            <FormHelperText>\r\n                                {associationErrorText}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            className={classes.input}\r\n                            required={!disabled}\r\n                            disabled={disabled}\r\n                            id=\"unit\"\r\n                            name=\"unit\"\r\n                            type=\"text\"\r\n                            label=\"Unit\"\r\n                            variant=\"outlined\"\r\n                            maxLength={50}\r\n                            value={unit}\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                            onBlur={validate}\r\n                            error={unitError}\r\n                            helperText={unitErrorText}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.handleClose} variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={registerNewUser}\r\n                >\r\n                    Add\r\n                </Button>\r\n                <Button\r\n                    onClick={checkInNewUser}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Check In Now\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogBoxContainer: {\r\n        width: 800,\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport default AddNewUserDialog;\r\n","D:\\GitHub\\weinhaus-creations\\garrison-scheduler\\src\\app\\functions\\polling.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":20},{"ruleId":"192","severity":1,"message":"196","line":16,"column":22,"nodeType":"194","messageId":"195","endLine":16,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":20},{"ruleId":"192","severity":1,"message":"197","line":31,"column":9,"nodeType":"194","messageId":"195","endLine":31,"endColumn":23},{"ruleId":"192","severity":1,"message":"196","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"198","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":16},{"ruleId":"192","severity":1,"message":"193","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":20},{"ruleId":"192","severity":1,"message":"196","line":13,"column":10,"nodeType":"194","messageId":"195","endLine":13,"endColumn":14},{"ruleId":"192","severity":1,"message":"199","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":19},{"ruleId":"192","severity":1,"message":"196","line":1,"column":21,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"200","line":8,"column":5,"nodeType":"194","messageId":"195","endLine":8,"endColumn":15},{"ruleId":"192","severity":1,"message":"201","line":17,"column":9,"nodeType":"194","messageId":"195","endLine":17,"endColumn":20},{"ruleId":"192","severity":1,"message":"199","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":19},{"ruleId":"192","severity":1,"message":"202","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":18},{"ruleId":"192","severity":1,"message":"203","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":22},{"ruleId":"192","severity":1,"message":"204","line":15,"column":11,"nodeType":"194","messageId":"195","endLine":15,"endColumn":22},{"ruleId":"205","severity":1,"message":"206","line":38,"column":8,"nodeType":"207","endLine":38,"endColumn":10,"suggestions":"208"},{"ruleId":"205","severity":1,"message":"209","line":22,"column":8,"nodeType":"207","endLine":22,"endColumn":10,"suggestions":"210"},{"ruleId":"192","severity":1,"message":"211","line":5,"column":5,"nodeType":"194","messageId":"195","endLine":5,"endColumn":11},{"ruleId":"192","severity":1,"message":"212","line":6,"column":5,"nodeType":"194","messageId":"195","endLine":6,"endColumn":18},{"ruleId":"192","severity":1,"message":"213","line":7,"column":5,"nodeType":"194","messageId":"195","endLine":7,"endColumn":18},{"ruleId":"192","severity":1,"message":"214","line":8,"column":5,"nodeType":"194","messageId":"195","endLine":8,"endColumn":22},{"ruleId":"192","severity":1,"message":"215","line":9,"column":5,"nodeType":"194","messageId":"195","endLine":9,"endColumn":16},{"ruleId":"192","severity":1,"message":"216","line":11,"column":5,"nodeType":"194","messageId":"195","endLine":11,"endColumn":14},{"ruleId":"192","severity":1,"message":"217","line":23,"column":12,"nodeType":"194","messageId":"195","endLine":23,"endColumn":27},{"ruleId":"192","severity":1,"message":"218","line":24,"column":12,"nodeType":"194","messageId":"195","endLine":24,"endColumn":19},{"ruleId":"192","severity":1,"message":"219","line":24,"column":21,"nodeType":"194","messageId":"195","endLine":24,"endColumn":31},{"ruleId":"192","severity":1,"message":"220","line":53,"column":11,"nodeType":"194","messageId":"195","endLine":53,"endColumn":22},{"ruleId":"192","severity":1,"message":"214","line":9,"column":5,"nodeType":"194","messageId":"195","endLine":9,"endColumn":22},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'forgotPassword' is assigned a value but never used.","'Button' is defined but never used.","'useParams' is defined but never used.","'Typography' is defined but never used.","'serviceName' is assigned a value but never used.","'serviceId' is assigned a value but never used.","'socketIOClient' is defined but never used.","'sectionName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'api.host', 'api.path', and 'sectionId'. Either include them or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has missing dependencies: 'api.host', 'api.path', 'chartData', and 'sectionId'. Either include them or remove the dependency array.",["224"],"'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","'associationList' is assigned a value but never used.","'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.","'checkInUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [api.host, api.path, sectionId]",{"range":"229","text":"230"},"Update the dependencies array to be: [api.host, api.path, chartData, sectionId]",{"range":"231","text":"232"},[1502,1504],"[api.host, api.path, sectionId]",[848,850],"[api.host, api.path, chartData, sectionId]"]